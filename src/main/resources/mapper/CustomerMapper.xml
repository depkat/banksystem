<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.banksystem.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.example.banksystem.bean.Customer">
    <id column="idnumber" jdbcType="VARCHAR" property="idnumber" />
    <result column="custname" jdbcType="VARCHAR" property="custname" />
    <result column="phonenum" jdbcType="CHAR" property="phonenum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="gender" jdbcType="CHAR" property="gender" />
  </resultMap>
  <resultMap id="ResultMapCard" type="com.example.banksystem.bean.Card">
    <id column="cardid" jdbcType="CHAR" property="cardid" />
    <result column="custidnum" jdbcType="VARCHAR" property="custidnum" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
  </resultMap>
  <resultMap id="BaseResultMapWithCard" type="com.example.banksystem.bean.Customer">
    <id column="idnumber" jdbcType="VARCHAR" property="idnumber" />
    <result column="custname" jdbcType="VARCHAR" property="custname" />
    <result column="phonenum" jdbcType="CHAR" property="phonenum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <collection property="cards" resultMap="ResultMapCard"/>
  </resultMap>
  <select id="selectCustWithnumid" resultMap="BaseResultMapWithCard" parameterType="java.lang.String">
  SELECT idnumber, custname ,phonenum ,email ,gender,
  cardid,custidnum,balance
  FROM customer
  LEFT JOIN card
  ON idnumber=custidnum
  WHERE idnumber=#{idnumber}

  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    idnumber, custname, phonenum, email, gender
  </sql>
  <select id="selectByExample" parameterType="com.example.banksystem.bean.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where idnumber = #{idnumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from customer
    where idnumber = #{idnumber,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.banksystem.bean.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.banksystem.bean.Customer">
    insert into customer (idnumber, custname, phonenum, 
      email, gender)
    values (#{idnumber,jdbcType=VARCHAR}, #{custname,jdbcType=VARCHAR}, #{phonenum,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.banksystem.bean.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idnumber != null">
        idnumber,
      </if>
      <if test="custname != null">
        custname,
      </if>
      <if test="phonenum != null">
        phonenum,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="gender != null">
        gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idnumber != null">
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="custname != null">
        #{custname,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        #{phonenum,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.banksystem.bean.CustomerExample" resultType="java.lang.Long">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.idnumber != null">
        idnumber = #{record.idnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.custname != null">
        custname = #{record.custname,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenum != null">
        phonenum = #{record.phonenum,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set idnumber = #{record.idnumber,jdbcType=VARCHAR},
      custname = #{record.custname,jdbcType=VARCHAR},
      phonenum = #{record.phonenum,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.banksystem.bean.Customer">
    update customer
    <set>
      <if test="custname != null">
        custname = #{custname,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        phonenum = #{phonenum,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
    </set>
    where idnumber = #{idnumber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.banksystem.bean.Customer">
    update customer
    set custname = #{custname,jdbcType=VARCHAR},
      phonenum = #{phonenum,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR}
    where idnumber = #{idnumber,jdbcType=VARCHAR}
  </update>
</mapper>